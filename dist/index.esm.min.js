function t(t,i){return Math.round(Math.random()*(i-t))+t}function i(t,i){return Math.random()*(i-t)+t}function s(t){return t[Math.floor(Math.random()*t.length)]}function r(t){return 180*t/Math.PI}function e(t){return t*Math.PI/180}function h(t,i,s,r){const e=s-t,h=r-i;return Math.sqrt(e*e+h*h)}function a(t,i,s,r,e,h){const a=r-t,n=e-i,x=h-s;return Math.sqrt(a*a+n*n+x*x)}function n(t,i,s){return Math.max(i,Math.min(t,s))}function x(t,i,s){return t*(1-s)+i*s}function o(t,i,s,r){return t=n((t-i)/(s-i),0,1),r?t*t*t*(t*(6*t-15)+10):t*t*(3-2*t)}function y(t){return 0==(t&t-1)}class _{constructor(t=0,i=0,s=0,r="XYZ"){this.x=t,this.y=i,this.z=s,this.order=r}static fromEuler(t){return(new _).setFromEuler(t)}static fromRotationMatrix(t,i){return(new _).setFromRotationMatrix(t,i)}static equals(t,i){return t.equals(i)}clone(){return new _(this.x,this.y,this.z,this.order)}set(t,i,s,r="XYZ"){return this.x=t,this.y=i,this.z=s,this.order=r,this}setFromEuler(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.order=t.order,this}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.order===t.order}setFromRotationMatrix(t,i){const s=t.toArray();if(16!==s.length)throw new Error("Matrix must contain 16 elements");const[r,e,h,a,x,o,y,_,u,l,c,z,m,w,d,M]=s;switch(i){case"XYZ":this.y=Math.asin(n(u,-1,1)),Math.abs(u)<.999999?(this.x=Math.atan2(-l,c),this.z=Math.atan2(-x,r)):(this.x=Math.atan2(y,o),this.z=0);break;case"XZY":this.z=Math.asin(-n(x,-1,1)),Math.abs(x)<.999999?(this.x=Math.atan2(y,o),this.y=Math.atan2(u,r)):(this.x=Math.atan2(-l,c),this.y=0);break;case"YXZ":this.x=Math.asin(-n(l,-1,1)),Math.abs(l)<.999999?(this.y=Math.atan2(u,c),this.z=Math.atan2(e,o)):(this.y=Math.atan2(-h,r),this.z=0);break;case"YZX":this.z=Math.asin(n(e,-1,1)),Math.abs(e)<.999999?(this.x=Math.atan2(-l,o),this.y=Math.atan2(-h,r)):(this.x=0,this.y=Math.atan2(u,c));break;case"ZXY":this.x=Math.asin(n(y,-1,1)),Math.abs(y)<.999999?(this.y=Math.atan2(-h,c),this.z=Math.atan2(-x,o)):(this.y=0,this.z=Math.atan2(e,r));break;case"ZYX":this.y=Math.asin(-n(h,-1,1)),Math.abs(h)<.999999?(this.x=Math.atan2(y,c),this.z=Math.atan2(e,r)):(this.x=0,this.z=Math.atan2(-x,o))}return this.order=i,this}}class u{constructor(t=0,i=0){this.length=2,this.x=t,this.y=i}static multiplyByScalar(t,i){return new u(t.x*i,t.y*i)}static addScalar(t,i){return new u(t.x+i,t.y+i)}static normalize(t){return(new u).setFromVec2(t).normalize()}static add(t,i){return new u(t.x+i.x,t.y+i.y)}static substract(t,i){return new u(t.x-i.x,t.y-i.y)}static dotProduct(t,i){return t.x*i.x+t.y*i.y}static applyMat3(t,i){return t.clone().applyMat3(i)}static lerp(t,i,s){return t.clone().lerp(i,s)}static rotate(t,i,s){return t.clone().rotate(i,s)}static equals(t,i,s=6){return!!t&&t.equals(i)}static getDistance(t,i){const s=i.x-t.x,r=i.y-t.y;return Math.sqrt(s*s+r*r)}static minMax(...t){return{min:new u(Math.min(...t.map((t=>t.x))),Math.min(...t.map((t=>t.y)))),max:new u(Math.max(...t.map((t=>t.x))),Math.max(...t.map((t=>t.y))))}}clone(){return new u(this.x,this.y)}set(t,i){return this.x=t,this.y=i,this}setFromVec2(t){return this.x=t.x,this.y=t.y,this}multiplyByScalar(t){return this.x*=t,this.y*=t,this}addScalar(t){return this.x+=t,this.y+=t,this}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.getMagnitude();return t&&(this.x/=t,this.y/=t),this}add(t){return this.x+=t.x,this.y+=t.y,this}substract(t){return this.x-=t.x,this.y-=t.y,this}dotProduct(t){return u.dotProduct(this,t)}applyMat3(t){if(9!==t.length)throw new Error("Matrix must contain 9 elements");const{x:i,y:s}=this,[r,e,,h,a,,n,x]=t;return this.x=i*r+s*h+n,this.y=i*e+s*a+x,this}lerp(t,i){return this.x+=i*(t.x-this.x),this.y+=i*(t.y-this.y),this}rotate(t,i){const s=Math.sin(i),r=Math.cos(i),e=this.x-t.x,h=this.y-t.y;return this.x=e*r-h*s+t.x,this.y=e*s+h*r+t.y,this}truncate(t=5){return this.x=+this.x.toFixed(t),this.y=+this.y.toFixed(t),this}equals(t,i=6){return!!t&&(+this.x.toFixed(i)==+t.x.toFixed(i)&&+this.y.toFixed(i)==+t.y.toFixed(i))}toArray(){return[this.x,this.y]}toIntArray(){return new Int32Array(this)}toFloatArray(){return new Float32Array(this)}*[Symbol.iterator](){yield this.x,yield this.y}}class l{constructor(){this.length=9,this._matrix=new Array(this.length),this._matrix[0]=1,this._matrix[1]=0,this._matrix[2]=0,this._matrix[3]=0,this._matrix[4]=1,this._matrix[5]=0,this._matrix[6]=0,this._matrix[7]=0,this._matrix[8]=1}get x_x(){return this._matrix[0]}get x_y(){return this._matrix[1]}get x_z(){return this._matrix[2]}get y_x(){return this._matrix[3]}get y_y(){return this._matrix[4]}get y_z(){return this._matrix[5]}get z_x(){return this._matrix[6]}get z_y(){return this._matrix[7]}get z_z(){return this._matrix[8]}static fromMat3(t){return(new l).setFromMat3(t)}static fromMat4(t){return(new l).setFromMat4(t)}static from4Vec2(t,i,s,r,e=!1){const h=new l;h.applyTranslation(-t.x,-t.y);const a=u.substract(i,t).getMagnitude(),n=u.substract(r,s).getMagnitude()/a;if(h.applyScaling(n),!e){const e=Math.atan2(i.y-t.y,i.x-t.x)-Math.atan2(r.y-s.y,r.x-s.x);h.applyRotation(e)}return h.applyTranslation(s.x,s.y),h}static multiply(t,i){const[s,r,e,h,a,n,x,o,y]=t._matrix,[_,u,c,z,m,w,d,M,g]=i._matrix,p=new l;return p.set(s*_+r*z+e*d,s*u+r*m+e*M,s*c+r*w+e*g,h*_+a*z+n*d,h*u+a*m+n*M,h*c+a*w+n*g,x*_+o*z+y*d,x*u+o*m+y*M,x*c+o*w+y*g),p}static multiplyScalar(t,i){const s=new l;for(let r=0;r<this.length;r++)s._matrix[r]=t._matrix[r]*i;return s}static transpose(t){const i=new l;return i.set(t.x_x,t.y_x,t.z_x,t.x_y,t.y_y,t.z_y,t.x_z,t.y_z,t.z_z),i}static invert(t){const i=new l;i.set(t.y_y*t.z_z-t.z_y*t.y_z,t.y_x*t.z_z-t.z_x*t.y_z,t.y_x*t.z_y-t.z_x*t.y_y,t.x_y*t.z_z-t.z_y*t.x_z,t.x_x*t.z_z-t.z_x*t.x_z,t.x_x*t.z_y-t.z_x*t.x_y,t.x_y*t.y_z-t.y_y*t.x_z,t.x_x*t.y_z-t.y_x*t.x_z,t.x_x*t.y_y-t.y_x*t.x_y),i.set(i.x_x,-i.x_y,i.x_z,-i.y_x,i.y_y,-i.y_z,i.z_x,-i.z_y,i.z_z);const s=t.x_x*i.x_x+t.x_y*i.x_y+t.x_z*i.x_z,r=new l;if(s){const t=1/s;r.set(t*i.x_x,t*i.y_x,t*i.z_x,t*i.x_y,t*i.y_y,t*i.z_y,t*i.x_z,t*i.y_z,t*i.z_z)}else r.set(0,0,0,0,0,0,0,0,0);return r}static buildScale(t,i){return null!=i||(i=t),(new l).set(t,0,0,0,i,0,0,0,1)}static buildRotation(t){const i=Math.cos(t),s=Math.sin(t);return(new l).set(i,-s,0,s,i,0,0,0,1)}static buildTranslate(t,i){return(new l).set(1,0,0,0,1,0,t,i,1)}static equals(t,i,s=6){return t.equals(i,s)}clone(){return(new l).set(this.x_x,this.x_y,this.x_z,this.y_x,this.y_y,this.y_z,this.z_x,this.z_y,this.z_z)}set(t,i,s,r,e,h,a,n,x){return this._matrix[0]=t,this._matrix[1]=i,this._matrix[2]=s,this._matrix[3]=r,this._matrix[4]=e,this._matrix[5]=h,this._matrix[6]=a,this._matrix[7]=n,this._matrix[8]=x,this}reset(){return this._matrix[0]=1,this._matrix[1]=0,this._matrix[2]=0,this._matrix[3]=0,this._matrix[4]=1,this._matrix[5]=0,this._matrix[6]=0,this._matrix[7]=0,this._matrix[8]=1,this}setFromMat3(t){for(let i=0;i<this.length;i++)this._matrix[i]=t._matrix[i];return this}setFromMat4(t){const i=t.toArray();if(16!==i.length)throw new Error("Matrix must contain 16 elements");const[s,r,e,,h,a,n,,x,o,y]=i;for(let t=0;t<this.length;t++)this._matrix[0]=s,this._matrix[1]=r,this._matrix[2]=e,this._matrix[3]=h,this._matrix[4]=a,this._matrix[5]=n,this._matrix[6]=x,this._matrix[7]=o,this._matrix[8]=y;return this}multiply(t){const[i,s,r,e,h,a,n,x,o]=this._matrix,[y,_,u,l,c,z,m,w,d]=t._matrix;return this._matrix[0]=i*y+s*l+r*m,this._matrix[1]=i*_+s*c+r*w,this._matrix[2]=i*u+s*z+r*d,this._matrix[3]=e*y+h*l+a*m,this._matrix[4]=e*_+h*c+a*w,this._matrix[5]=e*u+h*z+a*d,this._matrix[6]=n*y+x*l+o*m,this._matrix[7]=n*_+x*c+o*w,this._matrix[8]=n*u+x*z+o*d,this}multiplyScalar(t){for(let i=0;i<this.length;i++)this._matrix[i]*=t;return this}transpose(){const t=(new l).setFromMat3(this);return this.set(t.x_x,t.y_x,t.z_x,t.x_y,t.y_y,t.z_y,t.x_z,t.y_z,t.z_z),this}invert(){const t=new l;t.set(this.y_y*this.z_z-this.z_y*this.y_z,this.y_x*this.z_z-this.z_x*this.y_z,this.y_x*this.z_y-this.z_x*this.y_y,this.x_y*this.z_z-this.z_y*this.x_z,this.x_x*this.z_z-this.z_x*this.x_z,this.x_x*this.z_y-this.z_x*this.x_y,this.x_y*this.y_z-this.y_y*this.x_z,this.x_x*this.y_z-this.y_x*this.x_z,this.x_x*this.y_y-this.y_x*this.x_y),t.set(t.x_x,-t.x_y,t.x_z,-t.y_x,t.y_y,-t.y_z,t.z_x,-t.z_y,t.z_z);const i=this.x_x*t.x_x+this.x_y*t.x_y+this.x_z*t.x_z;if(i){const s=1/i;this.set(s*t.x_x,s*t.y_x,s*t.z_x,s*t.x_y,s*t.y_y,s*t.z_y,s*t.x_z,s*t.y_z,s*t.z_z)}else this.set(0,0,0,0,0,0,0,0,0);return this}getDeterminant(){const[t,i,s,r,e,h,a,n,x]=this._matrix;return t*e*x-t*h*n+i*h*a-i*r*x+s*r*n-s*e*a}getTRS(){const t=new u(this.z_x,this.z_y),i=Math.sqrt(this.x_x*this.x_x+this.x_y*this.x_y),s=Math.sqrt(this.y_x*this.y_x+this.y_y*this.y_y),r=new u(i,s),e=Math.atan(-this.x_y/this.x_x),h=Math.acos(this.x_x/i);let a;return a=h>Math.PI/2&&e>0||h<Math.PI/2&&e<0?2*Math.PI-h:h,{t:t,r:a,s:r}}equals(t,i=6){for(let s=0;s<this.length;s++)if(+this._matrix[s].toFixed(i)!=+t._matrix[s].toFixed(i))return!1;return!0}applyScaling(t,i){const s=l.buildScale(t,i);return this.multiply(s)}applyTranslation(t,i){const s=l.buildTranslate(t,i);return this.multiply(s)}applyRotation(t){const i=l.buildRotation(t);return this.multiply(i)}toArray(){return this._matrix.slice()}toIntArray(){return new Int32Array(this)}toFloatArray(){return new Float32Array(this)}toIntShortArray(){return new Int32Array([this._matrix[0],this._matrix[1],this._matrix[3],this._matrix[4],this._matrix[6],this._matrix[7]])}toFloatShortArray(){return new Float32Array([+this._matrix[0].toFixed(5),+this._matrix[1].toFixed(5),+this._matrix[3].toFixed(5),+this._matrix[4].toFixed(5),+this._matrix[6].toFixed(5),+this._matrix[7].toFixed(5)])}*[Symbol.iterator](){for(let t=0;t<9;t++)yield this._matrix[t]}}class c{constructor(t=0,i=0,s=0,r=1){this.x=t,this.y=i,this.z=s,this.w=r}static fromRotationMatrix(t){return(new c).setFromRotationMatrix(t)}static fromEuler(t){return(new c).setFromEuler(t)}static fromVec3Angle(t,i){return(new c).setFromVec3Angle(t,i)}static fromVec3s(t,i){return(new c).setFromVec3s(t,i)}static normalize(t){return t.clone().normalize()}static invert(t){return t.clone().normalize().invert()}static dotProduct(t,i){return t.x*i.x+t.y*i.y+t.z*i.z+t.w*i.w}static getAngle(t,i){return t.getAngle(i)}static multiply(t,i){return t.clone().multiply(i)}static slerp(t,i,s){return t.clone().slerp(i,s)}static equals(t,i,s=6){return t.equals(i,s)}clone(){return new c(this.x,this.y,this.z,this.w)}set(t,i,s,r){return this.x=t,this.y=i,this.z=s,this.w=r,this}setFromVec3s(t,i){t=t.clone().normalize(),i=i.clone().normalize();let s=t.dotProduct(i)+1;if(s<1e-6)s=0,Math.abs(t.x)>Math.abs(t.z)?(this.x=-t.y,this.y=t.x,this.z=0):(this.x=0,this.y=-t.z,this.z=t.y);else{const{x:s,y:r,z:e}=t.crossProduct(i);this.x=s,this.y=r,this.z=e}return this.w=s,this.normalize()}setFromQ(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}setFromRotationMatrix(t){if(16!==t.length)throw new Error("Matrix must contain 16 elements");const[i,s,r,e,h,a,n,x,o,y,_,u,l,c,z,m]=t,w=i+a+_;if(w>0){const t=.5/Math.sqrt(1+w);this.set((n-y)*t,(o-r)*t,(s-h)*t,.25/t)}else if(i>a&&i>_){const t=2*Math.sqrt(1+i-a-_);this.set(.25*t,(h+s)/t,(o+r)/t,(n-y)/t)}else if(a>_){const t=2*Math.sqrt(1+a-i-_);this.set((h+s)/t,.25*t,(y+n)/t,(o-r)/t)}else{const t=2*Math.sqrt(1+_-i-a);this.set((o+r)/t,(y+n)/t,.25*t,(s-h)/t)}return this}setFromEuler(t){const i=Math.cos(t.x/2),s=Math.cos(t.y/2),r=Math.cos(t.z/2),e=Math.sin(t.x/2),h=Math.sin(t.y/2),a=Math.sin(t.z/2);switch(t.order){case"XYZ":this.x=e*s*r+i*h*a,this.y=i*h*r-e*s*a,this.z=i*s*a+e*h*r,this.w=i*s*r-e*h*a;break;case"XZY":this.x=e*s*r-i*h*a,this.y=i*h*r-e*s*a,this.z=i*s*a+e*h*r,this.w=i*s*r+e*h*a;break;case"YXZ":this.x=e*s*r+i*h*a,this.y=i*h*r-e*s*a,this.z=i*s*a-e*h*r,this.w=i*s*r+e*h*a;break;case"YZX":this.x=e*s*r+i*h*a,this.y=i*h*r+e*s*a,this.z=i*s*a-e*h*r,this.w=i*s*r-e*h*a;break;case"ZXY":this.x=e*s*r-i*h*a,this.y=i*h*r+e*s*a,this.z=i*s*a+e*h*r,this.w=i*s*r-e*h*a;break;case"ZYX":this.x=e*s*r-i*h*a,this.y=i*h*r+e*s*a,this.z=i*s*a-e*h*r,this.w=i*s*r+e*h*a}return this}setFromVec3Angle(t,i){const s=t.clone().normalize(),r=i/2,e=Math.sin(r);return this.x=s.x*e,this.y=s.y*e,this.z=s.z*e,this.w=Math.cos(r),this}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}normalize(){const t=this.getMagnitude();return t&&(this.x/=t,this.y/=t,this.z/=t,this.w/=t),this}invert(){return this.normalize(),this.x*=-1,this.y*=-1,this.z*=-1,this}dotProduct(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}getAngle(t){return 2*Math.acos(Math.abs(n(this.dotProduct(t),-1,1)))}multiply(t){const{x:i,y:s,z:r,w:e}=this,{x:h,y:a,z:n,w:x}=t;return this.x=i*x+e*h+s*n-r*a,this.y=s*x+e*a+r*h-i*n,this.z=r*x+e*n+i*a-s*h,this.w=e*x-i*h-s*a-r*n,this}slerp(t,i){if(!(i=n(i,0,1)))return this;if(1===i)return this.setFromQ(t);const{x:s,y:r,z:e,w:h}=this,{x:a,y:x,z:o,w:y}=t,_=s*a+r*x+e*o+h*y;if(Math.abs(_)>=1)return this;const u=Math.acos(_),l=Math.sin(u);if(Math.abs(l)<1e-6)return this.x=.5*(s+a),this.y=.5*(r+x),this.z=.5*(e+o),this.w=.5*(h+y),this;const c=Math.sin((1-i)*u)/l,z=Math.sin(i*u)/l;return this.x=c*s+z*a,this.y=c*r+z*x,this.z=c*e+z*o,this.w=c*h+z*y,this}equals(t,i=6){return+this.x.toFixed(i)==+t.x.toFixed(i)&&+this.y.toFixed(i)==+t.y.toFixed(i)&&+this.z.toFixed(i)==+t.z.toFixed(i)&&+this.w.toFixed(i)==+t.w.toFixed(i)}}class z{constructor(t=0,i=0,s=0){this.length=3,this.x=t,this.y=i,this.z=s}static multiplyByScalar(t,i){return new z(t.x*i,t.y*i,t.z*i)}static addScalar(t,i){return new z(t.x+i,t.y+i,t.z+i)}static normalize(t){return(new z).setFromVec3(t).normalize()}static add(t,i){return new z(t.x+i.x,t.y+i.y,t.z+i.z)}static substract(t,i){return new z(t.x-i.x,t.y-i.y,t.z-i.z)}static dotProduct(t,i){return t.x*i.x+t.y*i.y+t.z*i.z}static crossProduct(t,i){return new z(t.y*i.z-t.z*i.y,t.z*i.x-t.x*i.z,t.x*i.y-t.y*i.x)}static onVector(t,i){return t.clone().onVector(i)}static onPlane(t,i){return t.clone().onPlane(i)}static applyMat3(t,i){return t.clone().applyMat3(i)}static applyMat4(t,i){return t.clone().applyMat4(i)}static lerp(t,i,s){return t.clone().lerp(i,s)}static equals(t,i,s=6){return!!t&&t.equals(i,s)}static getDistance(t,i){const s=i.x-t.x,r=i.y-t.y,e=i.z-t.z;return Math.sqrt(s*s+r*r+e*e)}static getAngle(t,i){return t.getAngle(i)}clone(){return new z(this.x,this.y,this.z)}set(t,i,s){return this.x=t,this.y=i,this.z=s,this}setFromVec3(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}multiplyByScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}getAngle(t){const i=this.getMagnitude()*t.getMagnitude();if(!i)return Math.PI/2;const s=this.dotProduct(t)/i;return Math.acos(n(s,-1,1))}normalize(){const t=this.getMagnitude();return t&&(this.x/=t,this.y/=t,this.z/=t),this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}substract(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}dotProduct(t){return z.dotProduct(this,t)}crossProduct(t){return this.x=this.y*t.z-this.z*t.y,this.y=this.z*t.x-this.x*t.z,this.z=this.x*t.y-this.y*t.x,this}onVector(t){const i=this.getMagnitude();return i?t.clone().multiplyByScalar(t.clone().dotProduct(this)/(i*i)):this.set(0,0,0)}onPlane(t){return this.substract(this.clone().onVector(t))}applyMat3(t){if(9!==t.length)throw new Error("Matrix must contain 9 elements");const{x:i,y:s,z:r}=this,[e,h,a,n,x,o,y,_,u]=t;return this.x=i*e+s*n+r*y,this.y=i*h+s*x+r*_,this.z=i*a+s*o+r*u,this}applyMat4(t){if(16!==t.length)throw new Error("Matrix must contain 16 elements");const{x:i,y:s,z:r}=this,[e,h,a,n,x,o,y,_,u,l,c,z,m,w,d,M]=t,g=1/(i*n+s*_+r*z+M);return this.x=(i*e+s*x+r*u+m)*g,this.y=(i*h+s*o+r*l+w)*g,this.z=(i*a+s*y+r*c+d)*g,this}lerp(t,i){return this.x+=i*(t.x-this.x),this.y+=i*(t.y-this.y),this.z+=i*(t.z-this.z),this}truncate(t=5){return this.x=+this.x.toFixed(t),this.y=+this.y.toFixed(t),this.z=+this.z.toFixed(t),this}equals(t,i=6){return!!t&&(+this.x.toFixed(i)==+t.x.toFixed(i)&&+this.y.toFixed(i)==+t.y.toFixed(i)&&+this.z.toFixed(i)==+t.z.toFixed(i))}toArray(){return[this.x,this.y,this.z]}toIntArray(){return new Int32Array(this)}toFloatArray(){return new Float32Array(this)}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}class m{constructor(){this.length=16,this._matrix=new Array(this.length),this._matrix[0]=1,this._matrix[1]=0,this._matrix[2]=0,this._matrix[3]=0,this._matrix[4]=0,this._matrix[5]=1,this._matrix[6]=0,this._matrix[7]=0,this._matrix[8]=0,this._matrix[9]=0,this._matrix[10]=1,this._matrix[11]=0,this._matrix[12]=0,this._matrix[13]=0,this._matrix[14]=0,this._matrix[15]=1}get x_x(){return this._matrix[0]}get x_y(){return this._matrix[1]}get x_z(){return this._matrix[2]}get x_w(){return this._matrix[3]}get y_x(){return this._matrix[4]}get y_y(){return this._matrix[5]}get y_z(){return this._matrix[6]}get y_w(){return this._matrix[7]}get z_x(){return this._matrix[8]}get z_y(){return this._matrix[9]}get z_z(){return this._matrix[10]}get z_w(){return this._matrix[11]}get w_x(){return this._matrix[12]}get w_y(){return this._matrix[13]}get w_z(){return this._matrix[14]}get w_w(){return this._matrix[15]}static fromMat4(t){return(new m).setFromMat4(t)}static fromTRS(t,i,s){return(new m).setFromTRS(t,i,s)}static fromQuaternion(t){return(new m).setFromQuaternion(t)}static multiply(t,i){const s=new m;return s.set(t.x_x*i.x_x+t.x_y*i.y_x+t.x_z*i.z_x+t.x_w*i.w_x,t.x_x*i.x_y+t.x_y*i.y_y+t.x_z*i.z_y+t.x_w*i.w_y,t.x_x*i.x_z+t.x_y*i.y_z+t.x_z*i.z_z+t.x_w*i.w_z,t.x_x*i.x_w+t.x_y*i.y_w+t.x_z*i.z_w+t.x_w*i.w_w,t.y_x*i.x_x+t.y_y*i.y_x+t.y_z*i.z_x+t.y_w*i.w_x,t.y_x*i.x_y+t.y_y*i.y_y+t.y_z*i.z_y+t.y_w*i.w_y,t.y_x*i.x_z+t.y_y*i.y_z+t.y_z*i.z_z+t.y_w*i.w_z,t.y_x*i.x_w+t.y_y*i.y_w+t.y_z*i.z_w+t.y_w*i.w_w,t.z_x*i.x_x+t.z_y*i.y_x+t.z_z*i.z_x+t.z_w*i.w_x,t.z_x*i.x_y+t.z_y*i.y_y+t.z_z*i.z_y+t.z_w*i.w_y,t.z_x*i.x_z+t.z_y*i.y_z+t.z_z*i.z_z+t.z_w*i.w_z,t.z_x*i.x_w+t.z_y*i.y_w+t.z_z*i.z_w+t.z_w*i.w_w,t.w_x*i.x_x+t.w_y*i.y_x+t.w_z*i.z_x+t.w_w*i.w_x,t.w_x*i.x_y+t.w_y*i.y_y+t.w_z*i.z_y+t.w_w*i.w_y,t.w_x*i.x_z+t.w_y*i.y_z+t.w_z*i.z_z+t.w_w*i.w_z,t.w_x*i.x_w+t.w_y*i.y_w+t.w_z*i.z_w+t.w_w*i.w_w),s}static multiplyScalar(t,i){const s=new m;for(let r=0;r<this.length;r++)s._matrix[r]=t._matrix[r]*i;return s}static transpose(t){const i=new m;return i.set(t.x_x,t.y_x,t.z_x,t.w_x,t.x_y,t.y_y,t.z_y,t.w_y,t.x_z,t.y_z,t.z_z,t.w_z,t.x_w,t.y_w,t.z_w,t.w_w),i}static invert(t){const i=1/t.getDeterminant(),[s,r,e,h,a,n,x,o,y,_,u,l,c,z,w,d]=t._matrix;return(new m).set((x*l*z-o*u*z+o*_*w-n*l*w-x*_*d+n*u*d)*i,(h*u*z-e*l*z-h*_*w+r*l*w+e*_*d-r*u*d)*i,(e*o*z-h*x*z+h*n*w-r*o*w-e*n*d+r*x*d)*i,(h*x*_-e*o*_-h*n*u+r*o*u+e*n*l-r*x*l)*i,(o*u*c-x*l*c-o*y*w+a*l*w+x*y*d-a*u*d)*i,(e*l*c-h*u*c+h*y*w-s*l*w-e*y*d+s*u*d)*i,(h*x*c-e*o*c-h*a*w+s*o*w+e*a*d-s*x*d)*i,(e*o*y-h*x*y+h*a*u-s*o*u-e*a*l+s*x*l)*i,(n*l*c-o*_*c+o*y*z-a*l*z-n*y*d+a*_*d)*i,(h*_*c-r*l*c-h*y*z+s*l*z+r*y*d-s*_*d)*i,(r*o*c-h*n*c+h*a*z-s*o*z-r*a*d+s*n*d)*i,(h*n*y-r*o*y-h*a*_+s*o*_+r*a*l-s*n*l)*i,(x*_*c-n*u*c-x*y*z+a*u*z+n*y*w-a*_*w)*i,(r*u*c-e*_*c+e*y*z-s*u*z-r*y*w+s*_*w)*i,(e*n*c-r*x*c-e*a*z+s*x*z+r*a*w-s*n*w)*i,(r*x*y-e*n*y+e*a*_-s*x*_-r*a*u+s*n*u)*i)}static lookAt(t,i,s){const r=z.equals(t,i)?new z(0,0,1):z.substract(t,i).normalize();let e=z.crossProduct(s,r).normalize();e.getMagnitude()||(1===Math.abs(s.z)?r.x+=1e-5:r.z+=1e-5,r.normalize(),e=z.crossProduct(s,r).normalize());const h=z.crossProduct(r,e).normalize();return(new m).set(e.x,e.y,e.z,0,h.x,h.y,h.z,0,r.x,r.y,r.z,0,t.x,t.y,t.z,1)}static buildScale(t,i,s){return null!=i||(i=t),null!=s||(s=t),(new m).set(t,0,0,0,0,i,0,0,0,0,s,0,0,0,0,1)}static buildRotationX(t){const i=Math.cos(t),s=Math.sin(t);return(new m).set(1,0,0,0,0,i,s,0,0,-s,i,0,0,0,0,1)}static buildRotationY(t){const i=Math.cos(t),s=Math.sin(t);return(new m).set(i,0,-s,0,0,1,0,0,s,0,i,0,0,0,0,1)}static buildRotationZ(t){const i=Math.cos(t),s=Math.sin(t);return(new m).set(i,s,0,0,-s,i,0,0,0,0,1,0,0,0,0,1)}static buildTranslate(t,i,s){return(new m).set(1,0,0,0,0,1,0,0,0,0,1,0,t,i,s,1)}static buildOrthographic(t,i,s,r,e,h){return(new m).set(2/(r-s),0,0,0,0,2/(h-e),0,0,0,0,2/(t-i),0,(s+r)/(s-r),(e+h)/(e-h),(t+i)/(t-i),1)}static buildPerspective(t,i,...s){if(4===s.length){const[r,e,h,a]=s;return(new m).set(2*t/(e-r),0,0,0,0,2*t/(a-h),0,0,(e+r)/(e-r),(a+h)/(a-h),(t+i)/(t-i),-1,0,0,2*t*i/(t-i),0)}if(2===s.length){const[r,e]=s,h=Math.tan(.5*Math.PI-.5*r);return(new m).set(h/e,0,0,0,0,h,0,0,0,0,(t+i)/(t-i),-1,0,0,2*t*i/(t-i),0)}throw new Error("Incorrect args quantity")}static equals(t,i,s=6){return t.equals(i,s)}clone(){return(new m).set(this.x_x,this.x_y,this.x_z,this.x_w,this.y_x,this.y_y,this.y_z,this.y_w,this.z_x,this.z_y,this.z_z,this.z_w,this.w_x,this.w_y,this.w_z,this.w_w)}set(t,i,s,r,e,h,a,n,x,o,y,_,u,l,c,z){return this._matrix[0]=t,this._matrix[1]=i,this._matrix[2]=s,this._matrix[3]=r,this._matrix[4]=e,this._matrix[5]=h,this._matrix[6]=a,this._matrix[7]=n,this._matrix[8]=x,this._matrix[9]=o,this._matrix[10]=y,this._matrix[11]=_,this._matrix[12]=u,this._matrix[13]=l,this._matrix[14]=c,this._matrix[15]=z,this}reset(){return this._matrix[0]=1,this._matrix[1]=0,this._matrix[2]=0,this._matrix[3]=0,this._matrix[4]=0,this._matrix[5]=1,this._matrix[6]=0,this._matrix[7]=0,this._matrix[8]=0,this._matrix[9]=0,this._matrix[10]=1,this._matrix[11]=0,this._matrix[12]=0,this._matrix[13]=0,this._matrix[14]=0,this._matrix[15]=1,this}setFromMat4(t){for(let i=0;i<this.length;i++)this._matrix[i]=t._matrix[i];return this}setFromTRS(t,i,s){const r=2*i.x*i.x,e=2*i.y*i.x,h=2*i.z*i.x,a=2*i.y*i.y,n=2*i.z*i.y,x=2*i.z*i.z,o=2*i.x*i.w,y=2*i.y*i.w,_=2*i.z*i.w;return this.set((1-a-x)*s.x,(e+_)*s.x,(h-y)*s.x,0,(e-_)*s.y,(1-r-x)*s.y,(n+o)*s.y,0,(h+y)*s.z,(n-o)*s.z,(1-r-a)*s.z,0,t.x,t.y,t.z,1),this}setFromQuaternion(t){return this.setFromTRS(new z(0,0,0),t,new z(1,1,1))}multiply(t){const[i,s,r,e,h,a,n,x,o,y,_,u,l,c,z,m]=this._matrix,[w,d,M,g,p,F,b,f,P,q,S,A,R,B,V,I]=t._matrix;return this._matrix[0]=i*w+s*p+r*P+e*R,this._matrix[1]=i*d+s*F+r*q+e*B,this._matrix[2]=i*M+s*b+r*S+e*V,this._matrix[3]=i*g+s*f+r*A+e*I,this._matrix[4]=h*w+a*p+n*P+x*R,this._matrix[5]=h*d+a*F+n*q+x*B,this._matrix[6]=h*M+a*b+n*S+x*V,this._matrix[7]=h*g+a*f+n*A+x*I,this._matrix[8]=o*w+y*p+_*P+u*R,this._matrix[9]=o*d+y*F+_*q+u*B,this._matrix[10]=o*M+y*b+_*S+u*V,this._matrix[11]=o*g+y*f+_*A+u*I,this._matrix[12]=l*w+c*p+z*P+m*R,this._matrix[13]=l*d+c*F+z*q+m*B,this._matrix[14]=l*M+c*b+z*S+m*V,this._matrix[15]=l*g+c*f+z*A+m*I,this}multiplyScalar(t){for(let i=0;i<this.length;i++)this._matrix[i]*=t;return this}transpose(){const t=(new m).setFromMat4(this);return this.set(t.x_x,t.y_x,t.z_x,t.w_x,t.x_y,t.y_y,t.z_y,t.w_y,t.x_z,t.y_z,t.z_z,t.w_z,t.x_w,t.y_w,t.z_w,t.w_w),this}invert(){const t=1/this.getDeterminant(),[i,s,r,e,h,a,n,x,o,y,_,u,l,c,z,m]=this._matrix;return this.set((n*u*c-x*_*c+x*y*z-a*u*z-n*y*m+a*_*m)*t,(e*_*c-r*u*c-e*y*z+s*u*z+r*y*m-s*_*m)*t,(r*x*c-e*n*c+e*a*z-s*x*z-r*a*m+s*n*m)*t,(e*n*y-r*x*y-e*a*_+s*x*_+r*a*u-s*n*u)*t,(x*_*l-n*u*l-x*o*z+h*u*z+n*o*m-h*_*m)*t,(r*u*l-e*_*l+e*o*z-i*u*z-r*o*m+i*_*m)*t,(e*n*l-r*x*l-e*h*z+i*x*z+r*h*m-i*n*m)*t,(r*x*o-e*n*o+e*h*_-i*x*_-r*h*u+i*n*u)*t,(a*u*l-x*y*l+x*o*c-h*u*c-a*o*m+h*y*m)*t,(e*y*l-s*u*l-e*o*c+i*u*c+s*o*m-i*y*m)*t,(s*x*l-e*a*l+e*h*c-i*x*c-s*h*m+i*a*m)*t,(e*a*o-s*x*o-e*h*y+i*x*y+s*h*u-i*a*u)*t,(n*y*l-a*_*l-n*o*c+h*_*c+a*o*z-h*y*z)*t,(s*_*l-r*y*l+r*o*c-i*_*c-s*o*z+i*y*z)*t,(r*a*l-s*n*l-r*h*c+i*n*c+s*h*z-i*a*z)*t,(s*n*o-r*a*o+r*h*y-i*n*y-s*h*_+i*a*_)*t),this}getDeterminant(){const[t,i,s,r,e,h,a,n,x,o,y,_,u,l,c,z]=this._matrix;return r*a*o*u-s*n*o*u-r*h*y*u+i*n*y*u+s*h*_*u-i*a*_*u-r*a*x*l+s*n*x*l+r*e*y*l-t*n*y*l-s*e*_*l+t*a*_*l+r*h*x*c-i*n*x*c-r*e*o*c+t*n*o*c+i*e*_*c-t*h*_*c-s*h*x*z+i*a*x*z+s*e*o*z-t*a*o*z-i*e*y*z+t*h*y*z}getTRS(){const t=new z(this.w_x,this.w_y,this.w_z),i=this.getDeterminant(),s=new z(this.x_x,this.x_y,this.x_z).getMagnitude()*(i<0?-1:1),r=new z(this.y_x,this.y_y,this.y_z).getMagnitude(),e=new z(this.z_x,this.z_y,this.z_z).getMagnitude(),h=new z(s,r,e),a=(new m).set(this.x_x/s,this.x_y/s,this.x_z/s,0,this.y_x/r,this.y_y/r,this.y_z/r,0,this.z_x/e,this.z_y/e,this.z_z/e,0,0,0,0,1);return{t:t,r:c.fromRotationMatrix(a),s:h}}equals(t,i=6){for(let s=0;s<this.length;s++)if(+this._matrix[s].toFixed(i)!=+t._matrix[s].toFixed(i))return!1;return!0}applyScaling(t,i,s){const r=m.buildScale(t,i,s);return this.multiply(r)}applyTranslation(t,i,s){const r=m.buildTranslate(t,i,s);return this.multiply(r)}applyRotation(t,i){let s;switch(t){case"x":default:s=m.buildRotationX(i);break;case"y":s=m.buildRotationY(i);break;case"z":s=m.buildRotationZ(i)}return this.multiply(s)}toArray(){return this._matrix.slice()}toIntArray(){return new Int32Array(this)}toFloatArray(){return new Float32Array(this)}*[Symbol.iterator](){for(let t=0;t<this.length;t++)yield this._matrix[t]}}class w{constructor(t=new z(0,0,1),i=0){if(!t.getMagnitude())throw new Error("Normal length is zero. Cannot define direction");this.normal=t.clone().normalize(),this.d=i}get point(){return this.normal.clone().multiplyByScalar(-this.d)}static equals(t,i,s=6){return t.equals(i,s)}static fromNormalAndPoint(t,i){return(new w).setFromNormalAndPoint(t,i)}static fromVec3s(t,i,s){return(new w).setFromPoints(t,i,s)}static applyMat4(t,i){return t.clone().applyMat4(i)}static multiplyByScalar(t,i){return t.clone().multiplyByScalar(i)}static translate(t,i){return t.clone().translate(i)}static projectPoint(t,i){return t.projectPoint(i)}clone(){return new w(this.normal,this.d)}set(t,i){if(!t.getMagnitude())throw new Error("Normal length is zero. Cannot define direction");return this.normal=t.clone().normalize(),this.d=i,this}setFromNormalAndPoint(t,i){if(!t.getMagnitude())throw new Error("Normal length is zero. Cannot define direction");return this.normal.setFromVec3(t).normalize(),this.d=-i.dotProduct(t),this}setFromPoints(t,i,s){const r=z.substract(i,t).crossProduct(z.substract(s,t));if(!r.getMagnitude())throw new Error("Normal length is zero. Points are equal or collinear");return this.setFromNormalAndPoint(r,t),this}applyMat4(t){const i=t.clone().invert().transpose(),s=this.point.applyMat4(t);return this.normal.applyMat4(i).normalize(),this.d=-s.dotProduct(this.normal),this}normalize(){const t=1/this.normal.getMagnitude();return this.multiplyByScalar(t)}multiplyByScalar(t){return this.normal.multiplyByScalar(t),this.d*=t,this}translate(t){return this.d-=t.dotProduct(this.normal),this}equals(t,i=6){return this.normal.equals(t.normal,i)&&+this.d.toFixed(i)==+t.d.toFixed(i)}getDistanceToPoint(t){return this.normal.dotProduct(t)+this.d}projectPoint(t){return z.multiplyByScalar(this.normal,-this.getDistanceToPoint(t)).add(t)}}class d{constructor(t,i){this.a=t.clone(),this.b=i.clone()}static fromLine(t){return new d(t.a,t.b)}static applyMat4(t,i){return new d(z.applyMat4(t.a,i),z.applyMat4(t.b,i))}static equals(t,i){return t.equals(i)}clone(){return new d(this.a,this.b)}set(t,i){return this.a=t.clone(),this.b=i.clone(),this}setFromLine(t){return this.a=t.a.clone(),this.b=t.b.clone(),this}getCenter(){return z.add(this.a,this.b).multiplyByScalar(.5)}getDelta(){return z.substract(this.b,this.a)}getLength(){return a(this.a.x,this.a.y,this.a.z,this.b.x,this.b.y,this.b.z)}applyMat4(t){return this.a.applyMat4(t),this.b.applyMat4(t),this}equals(t,i=6){return!(!this.a.equals(t.a,i)||!this.b.equals(t.b,i))}}class M{constructor(t,i,s){this.a=t,this.b=i,this.c=s}static fromTriangle(t){return new M(t.a,t.b,t.c)}static equals(t,i,s=6){return t.equals(i,s)}clone(){return new M(this.a,this.b,this.c)}set(t,i,s){this.a=t,this.b=i,this.c=s}setFromTriangle(t){return this.a=t.a.clone(),this.b=t.b.clone(),this.c=t.c.clone(),this}getArea(){const t=this.b.clone().substract(this.a),i=this.c.clone().substract(this.a);return t.crossProduct(i).getMagnitude()/2}getCenter(){return this.a.clone().add(this.b).add(this.c).multiplyByScalar(1/3)}getNormal(){const t=this.b.clone().substract(this.a),i=this.c.clone().substract(this.a);return t.crossProduct(i).normalize()}getBary(t){const i=this.c.clone().substract(this.a),s=this.b.clone().substract(this.a),r=t.clone().substract(this.a),e=i.dotProduct(i),h=i.dotProduct(s),a=i.dotProduct(r),n=s.dotProduct(s),x=s.dotProduct(r),o=e*n-h*h;if(!o)return null;const y=(e*x-h*a)/o,_=(n*a-h*x)/o;return new z(1-y-_,y,_)}getUV(t,i,s,r){const e=this.getBary(t);return(new u).add(i.clone().multiplyByScalar(e.x)).add(s.clone().multiplyByScalar(e.y)).add(r.clone().multiplyByScalar(e.z))}valid(t){return!!this.getBary(t)}contains(t){const i=this.getBary(t);return i.x>=0&&i.y>=0&&i.x+i.y<=1}equals(t,i=6){return!!(this.a.equals(t.a,i)&&this.b.equals(t.b,i)&&this.c.equals(t.c,i))}}class g{constructor(t=0,i=0,s=0,r=1){this.length=4,this.x=t,this.y=i,this.z=s,this.w=r}static fromVec3(t){return new g(t.x,t.y,t.z)}static multiplyByScalar(t,i){return new g(t.x*i,t.y*i,t.z*i,t.w*i)}static addScalar(t,i){return new g(t.x+i,t.y+i,t.z+i,t.w+i)}static normalize(t){return(new g).setFromVec4(t).normalize()}static add(t,i){return new g(t.x+i.x,t.y+i.y,t.z+i.z,t.w+i.w)}static substract(t,i){return new g(t.x-i.x,t.y-i.y,t.z-i.z,t.w-i.w)}static dotProduct(t,i){return t.x*i.x+t.y*i.y+t.z*i.z+t.w*i.w}static applyMat4(t,i){return t.clone().applyMat4(i)}static lerp(t,i,s){return t.clone().lerp(i,s)}static equals(t,i,s=6){return!!t&&t.equals(i,s)}clone(){return new g(this.x,this.y,this.z,this.w)}set(t,i,s,r){return this.x=t,this.y=i,this.z=s,this.w=r,this}setFromVec3(t){this.x=t.x,this.y=t.y,this.z=t.z,this.w=1}setFromVec4(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}multiplyByScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}getMagnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}normalize(){const t=this.getMagnitude();return t&&(this.x/=t,this.y/=t,this.z/=t,this.w/=t),this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}substract(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}dotProduct(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}applyMat4(t){if(16!==t.length)throw new Error("Matrix must contain 16 elements");const{x:i,y:s,z:r,w:e}=this,[h,a,n,x,o,y,_,u,l,c,z,m,w,d,M,g]=t;return this.x=i*h+s*o+r*l+e*w,this.y=i*a+s*y+r*c+e*d,this.z=i*n+s*_+r*z+e*M,this.w=i*x+s*u+r*m+e*g,this}lerp(t,i){return this.x+=i*(t.x-this.x),this.y+=i*(t.y-this.y),this.z+=i*(t.z-this.z),this.w+=i*(t.w-this.w),this}truncate(t=5){return this.x=+this.x.toFixed(t),this.y=+this.y.toFixed(t),this.z=+this.z.toFixed(t),this.w=+this.w.toFixed(t),this}equals(t,i=6){return!!t&&(+this.x.toFixed(i)==+t.x.toFixed(i)&&+this.y.toFixed(i)==+t.y.toFixed(i)&&+this.z.toFixed(i)==+t.z.toFixed(i)&&+this.w.toFixed(i)==+t.w.toFixed(i))}toArray(){return[this.x,this.y,this.z,this.w]}toIntArray(){return new Int32Array(this)}toFloatArray(){return new Float32Array(this)}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}export{_ as EulerAngles,l as Mat3,m as Mat4,w as Plane,c as Quaternion,d as Segment,M as Triangle,u as Vec2,z as Vec3,g as Vec4,n as clamp,e as degToRad,h as getDistance2D,a as getDistance3D,s as getRandomArrayElement,i as getRandomFloat,t as getRandomInt,y as isPowerOf2,x as lerp,r as radToDeg,o as smoothstep};
